Задача разработки простейшего платежного сервиса

Платежный сервис обладает некоторым состоянием характризующимся следующими свойствами:
let state = {
	currencyName:"btc" //(валюта, в которой оперирует сервис). Неизменно в рамках работы сервиса.
	payment: {
		minAmount: 0.1 // Минимальная сумма платежа в валюте сервиса. Могут меняться извне
		maxAmount: 0.2 // Максимальная сумма платежа в валюте сервиса. Могут меняться извне
	},
	rate:{
		value:6500.22, // В долларах за 1 единицу валюты. Может меняться в процессе работы сервиса
		timestamp: 1541431123 // Может меняться в процессе работы сервиса
	},
	available:123 // Меняется при выводе.
}



Необходимо реализовать метод 
/withdaw предназначенный для вывода средств на переданный кошелек.
Метод принимает на вход следующие параметры в виде JSON-объекта:
{
	amount:"сумма транзакции в валюте", 
	currency:"валюта (usd или btc)", 
	to:"адрес btc"
}

Возвращает {"status":"ok"} если вывод прошел успешно. или {"status":"error", errors:[{message:"Текст ошибки"}]}

Необходимые свойства:
1) Если передана валюта usd заданное amount пересчитываем по текущему курсу, в случае валюты btc конвертация не требуется
2) Необходимо проверять что сумма на вывод находится в указанном в состоянии диапазоне и не больше доступной сервису.
3) Необходимо проверять что курс корректен (предложите ваши метрики для курса BTC/USD исходя из исходных данных).
4) Необходимо проверять что переданные пользователем данные корректные. В случае некорректности данных возвращаем соответствующую ошибку
Для проверки корректности адреса btc можно обратиться к реализации в данном пакете: https://github.com/ognus/wallet-address-validator
5) В случае ошибки необходимо вернуть ее в указанном формате
6) Необходимо зафиксировать точность с которой произволсятся операции, т.е ошибка округления либо не должна быть либо должна быть определенной.

Вопросы:
1) Какие ошибки могут возникнуть в результате функционирования метода?
2) Каким образом, на ваш взгляд стоит организовать хранение состояния приложения в случае если оно может меняться извне?
Вопрос теоретический, представим что внешний клиент реализует обновление данных любым удобным нам способом.
3) Какие уязвимые аспекты функционирования данного сервиса видите (за исключением отсутствия авторизации и доверия источникам формирующим состояние, безусловно)? 
Что с этим можно сделать?
4) Реализуйте сценарий на mocha проверяющий кейс, когда в процессе функционирования сервиса у него заканчиваются средства на выплаты.